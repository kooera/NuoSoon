// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NuoSoon.DataContext;

namespace NuoSoon.DataContext.Migrations
{
    [DbContext(typeof(NsDb))]
    [Migration("20190526044957_vli1002")]
    partial class vli1002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vli.Entity.PO.AccessRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AS");

                    b.Property<string>("AccessFrom");

                    b.Property<string>("AccessTo");

                    b.Property<string>("Browser");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CountryCode");

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("HttpMethod");

                    b.Property<string>("IP");

                    b.Property<string>("ISP");

                    b.Property<string>("Lat");

                    b.Property<string>("LayoutEngine");

                    b.Property<string>("Lon");

                    b.Property<string>("Message");

                    b.Property<string>("Mobile");

                    b.Property<string>("ORG");

                    b.Property<string>("Platform");

                    b.Property<string>("Proxy");

                    b.Property<string>("Query");

                    b.Property<string>("Region");

                    b.Property<string>("RegionName");

                    b.Property<string>("Reverse");

                    b.Property<string>("Status");

                    b.Property<string>("Timezone");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UserAgent");

                    b.Property<string>("UserLanguages");

                    b.Property<string>("Version");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.ToTable("AccessRecord");
                });

            modelBuilder.Entity("Vli.Entity.PO.GBDistrictCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.ToTable("GBDistrictCode");
                });

            modelBuilder.Entity("Vli.Entity.PO.GBIndustry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.ToTable("GBIndustrie");
                });

            modelBuilder.Entity("Vli.Entity.PO.GroupRight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("GroupId");

                    b.Property<int>("RightId");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("GroupRight");
                });

            modelBuilder.Entity("Vli.Entity.PO.Navigation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName");

                    b.Property<string>("Actions");

                    b.Property<string>("Code");

                    b.Property<string>("ControllerName");

                    b.Property<string>("CreateIP");

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("IconUrl");

                    b.Property<int>("IdChannel");

                    b.Property<int>("IdParent");

                    b.Property<bool>("IsInnerSite");

                    b.Property<bool>("IsLock");

                    b.Property<bool>("IsSys");

                    b.Property<int>("Layer");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Parameter");

                    b.Property<string>("Remark")
                        .HasMaxLength(255);

                    b.Property<string>("SimpleName");

                    b.Property<int>("Sort");

                    b.Property<string>("Target");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Navigation");
                });

            modelBuilder.Entity("Vli.Entity.PO.RoleRight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("RightId");

                    b.Property<int>("RoleId");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("RoleRight");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Desc");

                    b.Property<string>("GropuName")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<int>("ParentId");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("SystemGroup");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Exception");

                    b.Property<string>("Level");

                    b.Property<string>("Logger");

                    b.Property<string>("Message");

                    b.Property<string>("Operator");

                    b.Property<string>("Thread");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("SystemLog");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemNavigation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName");

                    b.Property<int>("ChannelId");

                    b.Property<string>("Code");

                    b.Property<string>("ControllerName");

                    b.Property<string>("CreateIP");

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("IconUrl");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsInnerSite");

                    b.Property<bool>("IsSystem");

                    b.Property<int>("Layer");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Parameter");

                    b.Property<int>("ParentId");

                    b.Property<string>("Remark")
                        .HasMaxLength(255);

                    b.Property<string>("SimpleName");

                    b.Property<int>("Sort");

                    b.Property<string>("Target");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SystemNavigation");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Desc");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Keyword")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SystemParameter");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Desc");

                    b.Property<string>("GrantItem")
                        .IsRequired();

                    b.Property<string>("GrantType");

                    b.Property<bool>("IsActive");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("SystemPermission");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemRight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Desc");

                    b.Property<string>("GrantItem")
                        .IsRequired();

                    b.Property<string>("GrantType");

                    b.Property<bool>("IsActive");

                    b.Property<int>("ParentId");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("SystemRight");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Desc");

                    b.Property<bool>("IsActive");

                    b.Property<int>("ParentId");

                    b.Property<string>("RoleName")
                        .IsRequired();

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("SystemRole");
                });

            modelBuilder.Entity("Vli.Entity.PO.SystemUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsLock");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<string>("Pwd")
                        .IsRequired();

                    b.Property<string>("RealName");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("SystemUser");
                });

            modelBuilder.Entity("Vli.Entity.PO.UserGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("GroupId");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("Vli.Entity.PO.UserRight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("RightId");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRight");
                });

            modelBuilder.Entity("Vli.Entity.PO.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreateId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("RoleId");

                    b.Property<long>("UpdateId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
